class ['a] stack init = object
    val mutable v : 'a list = init

    method pop =
      match v with
      | hd :: tl ->
        v <- tl;
        Some hd
      | [] -> None

    method push hd =
      v <- hd :: v
  end ;;
#part 1
class ['a] stack init = object
      val mutable v = init
    
      method pop = 
        match v with
        | hd :: tl -> 
          v <- tl;
          Some hd
        | [] -> None

      method push hd = 
        v <- hd :: v
  end ;;
#part 2
class sstack init = object
    inherit [string] stack init

    method print =
      List.iter ~f:print_string v
  end ;;
#part 3
class double_stack init = object
    inherit [int] stack init as super

    method push hd =
      super#push (hd * 2)
  end ;;
